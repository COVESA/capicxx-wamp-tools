<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>commonapi</groupId>
	<artifactId>org.genivi.commonapi.wamp.updatesite</artifactId>
	<packaging>eclipse-repository</packaging>
	<parent>
		<groupId>commonapi</groupId>
		<artifactId>org.genivi.commonapi.wamp.releng</artifactId>
		<version>0.7.0-SNAPSHOT</version>
		<relativePath>../org.genivi.commonapi.wamp.releng</relativePath>
	</parent>

	<properties>
		<!-- <update.site.name>GENIVI CommonAPI Wamp Tools</update.site.name> -->
		<!-- <update.site.description>Latest Build</update.site.description> -->
		<!-- <update.site.version>${unqualifiedVersion}.${BUILD_ALIAS}</update.site.version> -->
		<!-- <target.eclipse.version>4.7 (Oxygen)</target.eclipse.version> -->
		<wamp.generator.prjname>org.genivi.commonapi.wamp</wamp.generator.prjname>
	</properties>

	<build>
		<plugins>
			<!-- <plugin> <groupId>org.eclipse.tycho</groupId> <artifactId>tycho-p2-repository-plugin</artifactId> 
				<version>${tycho-version}</version> <configuration> <includeAllDependencies>false</includeAllDependencies> 
				<createArtifactRepository>true</createArtifactRepository> <compress>true</compress> 
				<finalName>${project.name}${unqualifiedVersion}.${buildQualifier}</finalName> 
				</configuration> </plugin> -->

			<!-- workaround https://bugs.eclipse.org/bugs/show_bug.cgi?id=453708 -->
			<!-- Maven/Tycho doesn't support adding referenced thirdparty to update 
				sites -->
			<plugin>
				<groupId>org.jboss.tools.tycho-plugins</groupId>
				<artifactId>repository-utils</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>generate-repository-facade</goal>
						</goals>
						<configuration>
							<!-- configuration options for the generated HTML page -->
							<!-- <symbols> If you set a siteTemplateFolder value, ensure that 
								the folder exists as site/siteTemplateFolder/ and that it contains site/siteTemplateFolder/index.html 
								file (and optionally, a site/siteTemplateFolder/web/site.css file, too). 
								<siteTemplateFolder>siteTemplateFolder/</siteTemplateFolder> <update.site.name>${update.site.name}</update.site.name> 
								<update.site.description>${update.site.description}</update.site.description> 
								<update.site.version>${update.site.version}</update.site.version> <target.eclipse.version>${target.eclipse.version}</target.eclipse.version> 
								</symbols> -->
							<associateSites>
								<associateSite>http://download.eclipse.org/modeling/tmf/xtext/updates/releases/maintenance/R201411190455/</associateSite>
								<associateSite>http://genivi.github.io/capicxx-core-tools/updatesite/</associateSite>
								<associateSite>http://franca.github.io/franca/update_site/releases/</associateSite>
							</associateSites>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<!-- Rename the ZIP files -->
					<execution>
						<id>update-zip-files</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- Rename the products -->
								<move verbose="true" todir="${project.build.directory}">
									<mapper type="regexp"
										from="${project.name}-${unqualifiedVersion}-SNAPSHOT"
										to="${project.name}-${unqualifiedVersion}.${buildQualifier}.zip" />

									<fileset dir="${project.build.directory}">
										<include name="*.zip" />
									</fileset>
								</move>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>copy-standalone-generator-jar</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="copy standalone jar executable to gh-pages folder">
								<copy
									todir="${project.build.directory}/gh-pages/standalone/integration">
									<mapper type="regexp"
										from="${wamp.generator.prjname}-${unqualifiedVersion}.${buildQualifier}-standalone"
										to="${wamp.generator.prjname}-${unqualifiedVersion}.${buildQualifier}-standalone.jar" />
									<fileset
										dir="${project.build.directory}/../../${wamp.generator.prjname}/target">
										<include name="*.jar" />
									</fileset>
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>create-file-index</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<workingDirectory>${basedir}/scripts/</workingDirectory>
					<executable>./create_file_index.sh</executable>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho.extras</groupId>
				<artifactId>tycho-p2-extras-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>mirror</goal>
						</goals>
						<configuration>
							<source>
								<!-- source repository to mirror from as a URI -->
								<repository>
									<url>${project.baseUri}/target/repository</url>
									<layout>p2</layout>
								</repository>
							</source>
							<!-- Target repository file location -->
							<destination>${project.basedir}/target/gh-pages/updatesite/integration</destination>
							<!-- whether to append to the target repository content -->
							<append>false</append>
							<compress>true</compress>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>jboss</id>
			<url>https://repository.jboss.org/</url>
			<layout>m2</layout>
		</repository>
	</repositories>
</project>