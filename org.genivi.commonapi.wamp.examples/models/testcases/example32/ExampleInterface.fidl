package testcases.example32

// this tests broadcasts with complex argument types
interface ExampleInterface {
	version { major 0 minor 7 }

	enumeration MyEnum {
		ENUM1
		ENUM2
		ENUM3 = 100
		ENUM4
	}

	struct MyStruct {
		UInt64 elem1
		Boolean elem2
	}
	
	// enumeration type argument
	broadcast broadcast1 {
		out {
			MyEnum arg1
		}
	}

	// named array type argument
	array MyArray1 of UInt64
	broadcast broadcast2 {
		out {
			MyArray1 arg1
		}
	}

	// implicit array type argument with UInt64 elements
	broadcast broadcast3 {
		out {
			UInt64[] arg1
		}
	}

	// implicit array type argument with MyStruct elements
	broadcast broadcast4 {
		out {
			MyStruct[] arg1
		}
	}
	
	// map type argument with primitive value type
	//map MyMap1 { UInt32 to UInt64 }
	map MyMap1 { String to UInt64 }
	broadcast broadcast5 {
		out {
			MyMap1 arg1
		}
	}

	// map type argument with struct value type
	//map MyMap2 { UInt32 to MyStruct }
	map MyMap2 { String to MyStruct }
	broadcast broadcast6 {
		out {
			MyMap2 arg1
		}
	}
}
