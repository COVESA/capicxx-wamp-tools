package org.genivi.commonapi.wamp.deployment;

import org.franca.deploymodel.core.FDeployedInterface;
import org.franca.deploymodel.core.FDeployedProvider;
import org.franca.deploymodel.core.FDeployedTypeCollection;
import org.franca.deploymodel.dsl.fDeploy.FDInterfaceInstance;

public class PropertyAccessor extends org.genivi.commonapi.core.deployment.PropertyAccessor {

	// TODO: deactivated because the following classes will be generated by Franca and this still has to be done during the mvn build
//	DeploymentInterfacePropertyAccessor wampInterface_;
//	DeploymentTypeCollectionPropertyAccessor wampTypeCollection_;
//	DeploymentProviderPropertyAccessor wampProvider_;
	
	public PropertyAccessor() {
//		wampInterface_ = null;
//		wampTypeCollection_ = null;
//		wampProvider_ = null;
	}
	
	public PropertyAccessor(FDeployedInterface _target) {
		super(_target);
//		wampInterface_ = new DeploymentInterfacePropertyAccessor(_target);
//		wampTypeCollection_ = null;
//		wampProvider_ = null;
	}
	
	public PropertyAccessor(FDeployedTypeCollection _target) {
		super(_target);
//		wampInterface_ = null;
//		wampTypeCollection_ = new DeploymentTypeCollectionPropertyAccessor(_target);;
//		wampProvider_ = null;
	}
	
	public PropertyAccessor(FDeployedProvider _target) {
		super(_target);
//		wampInterface_ = null;
//		wampTypeCollection_ = null;
//		wampProvider_ = new DeploymentProviderPropertyAccessor(_target);
	}
	
	// TODO

	public String getWampInterfaceName (FDInterfaceInstance obj) {
		try {
//			if (type_ == DeploymentType.PROVIDER)
//				return wampProvider_.getWampInterfaceName(obj);
			return "DUMMY"; // TODO
		}
		catch (java.lang.NullPointerException e) {}
		return null;
	}
	
	public String getWampObjectPath (FDInterfaceInstance obj) {
		try {
//			if (type_ == DeploymentType.PROVIDER)
//				return wampProvider_.getWampObjectPath(obj);
			return "DUMMY"; // TODO
		}
		catch (java.lang.NullPointerException e) {}
		return null;
	}
	
	public String getWampServiceName (FDInterfaceInstance obj) {
		try {
//			if (type_ == DeploymentType.PROVIDER)
//				return wampProvider_.getWampServiceName(obj);
			return "DUMMY"; // TODO
		}
		catch (java.lang.NullPointerException e) {}
		return null;
	}

}
